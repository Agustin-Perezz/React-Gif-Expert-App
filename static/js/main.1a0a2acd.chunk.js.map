{"version":3,"sources":["assets/images/search.png","components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GridItems.js","hooks/useFetchApi.js","components/ui/CustomTitle.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","className","onSubmit","onClick","src","searchIcon","alt","value","type","onChange","target","placeholder","autoFocus","GifGridItem","url","title","id","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GridItems","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchApi","CustomTitle","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"gMAAe,MAA0B,mC,OCK5BA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE9B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMMC,EAAe,SAACC,GACrBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,GAAtB,IACnBN,EAAe,IAGhB,EAED,OACC,uBAAMO,UAAU,OAAOC,SAAWP,EAAlC,UACC,qBAAKM,UAAU,iBAAiBE,QAAUR,EAA1C,SACC,qBAAKS,IAAMC,EAAaC,IAAI,SAASL,UAAU,WAEhD,uBACCM,MAAOd,EACPe,KAAK,OACLC,SArBuB,SAACb,GAC1BF,EAAeE,EAAEc,OAAOH,MACxB,EAoBEN,UAAU,QACVU,YAAY,oBACZC,UAAU,WAIb,E,QCnCYC,EAAc,SAAC,GAA0B,IAAvBC,EAAsB,EAAtBA,IAASC,GAAa,EAAjBC,GAAiB,EAAbD,OAEvC,OACC,sBAAKd,UAAU,yCAAf,UACC,qBAAKG,IAAMU,EAAMR,IAAOS,IACxB,qBAAKd,UAAU,QAAf,SACC,kCAAMc,EAAN,WAIH,E,uBCXYE,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfL,EAFe,iDAEkCM,UAAWF,GAF7C,gEAGFG,MAAOP,GAHL,cAGfQ,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC7B,MAAO,CACNX,GAAIW,EAAIX,GACRD,MAAOY,EAAIZ,MACXD,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,IAEnC,IAZoB,kBAcdW,GAdc,4CAAH,sDCEPK,EAAY,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAE5B,ECF0B,SAAEA,GAE5B,MAA0B1B,mBAAS,CAClCgC,KAAM,GACNO,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdCC,qBAAW,WACVjB,EAASC,GACPiB,MAAM,SAAAC,GAENC,YAAY,WACXJ,EAAS,CACRT,KAAMY,EACNL,SAAS,GACP,IAEH,GACD,GACF,GAAE,CAAEb,IAECc,CAEP,CDrBiCM,CAAapB,GAAtCa,EAAR,EAAQA,QAAcH,EAAtB,EAAiBJ,KAEjB,OACC,qCACC,qBAAIvB,UAAU,iBAAd,cAAkCiB,EAAlC,OAEEa,GAAW,YAEb,qBAAK9B,UAAU,YAAf,SAGE2B,EAAOF,KAAK,SAACC,GACZ,OAAO,cAAC,EAAD,eAEDA,GADEA,EAAIX,GAGZ,QAML,EE1BYuB,EAAc,WACtB,OACK,sBAAKtC,UAAU,kBAAf,UACK,sBAAKA,UAAU,UAAf,UACK,qCACA,qCACA,wCAEL,sBAAKA,UAAU,UAAf,UACK,qCACA,qCACA,qCACA,qCACA,qCACA,wCAEL,sBAAKA,UAAU,UAAf,UACK,qCACA,qCACA,0CAInB,ECQcuC,EA3BM,WACpB,MAAoChD,mBAAS,CAAC,cAA9C,mBAAOiD,EAAP,KAAmBlD,EAAnB,KAEA,OACC,qCACC,sBAAKU,UAAU,SAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,CAAaV,cAAiBA,OAE/B,oBAAIU,UAAU,mBAEd,6BAEEwC,EAAWf,KAAK,SAAAR,GACf,OAAO,cAAC,EAAD,CAENA,SAAWA,GADLA,EAGP,QAML,E,MCzBDwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,Q","file":"static/js/main.1a0a2acd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.3a608aca.png\";","import React, { useState } from 'react'\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport searchIcon from '../assets/images/search.png';\r\n\r\nexport const AddCategory = ( { setCategorias } ) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleEventChange = (e) => {\r\n\t\tsetInputValue( e.target.value );\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif ( inputValue.trim().length > 2 ) {\r\n\t\t\tsetCategorias( cats => [  inputValue, ...cats, ]);\r\n\t\t\tsetInputValue( '' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className='form' onSubmit={ handleSubmit }>\r\n\t\t\t<div className='container-icon' onClick={ handleSubmit }>\r\n\t\t\t\t<img src={ searchIcon } alt='search' className='icon'/>\r\n\t\t\t</div>\r\n\t\t\t<input \r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tonChange={ handleEventChange }\r\n\t\t\t\tclassName='input'\r\n\t\t\t\tplaceholder='Search any gif...'\r\n\t\t\t\tautoFocus='true'\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategorias: PropTypes.func.isRequired\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nexport const GifGridItem = ( { url, id, title } ) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={ url } alt= { title } />\r\n\t\t\t<div className=\"title\">\r\n\t\t\t\t<p> { title } </p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\turl: PropTypes.string.isRequired,\r\n\ttitle: PropTypes.string.isRequired\r\n}","\r\nexport const getGifs = async( category ) => {\r\n\r\n\t\tconst url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) } &limit=10&api_key=FMhyGibIwevlIDT96VLM3CQUnXKiubk2`;\t\r\n\t\tconst resp = await fetch( url ); \r\n\t\tconst { data } = await resp.json();\r\n\r\n\t\tconst gifs = data.map( img => {\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images?.downsized_medium.url\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn gifs; \r\n\r\n\t}\r\n","import { GifGridItem } from './GifGridItem'\r\nimport { useFetchApi } from \"../hooks/useFetchApi\"\r\n\r\nexport const GridItems = ( { category } ) => {\r\n\r\n\tconst { loading, data:images } = useFetchApi( category );\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='title-category'> { category } </h3>\t\r\n\r\n\t\t\t{ loading && 'Loading..'}\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map( (img) => {\r\n\t\t\t\t\t\treturn <GifGridItem \r\n\t\t\t\t\t\t\tkey= { img.id }\r\n\t\t\t\t\t\t\t{ ...img }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t</div> \r\n\t\t</>\r\n\t)\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchApi = ( category ) => {\r\n\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t})\r\n\r\n\t\tuseEffect( () => {\r\n\t\t\tgetGifs( category )\r\n\t\t\t\t.then( imgs => {\r\n\r\n\t\t\t\t\tsetTimeout( () => {\r\n\t\t\t\t\t setstate({\r\n\t\t\t\t\t\t data: imgs,\r\n\t\t\t\t\t\t loading: false\r\n\t\t\t\t\t }, 4000);\r\n\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t}, [ category ])\r\n\r\n\treturn state;\r\n\r\n}","\r\nexport const CustomTitle = () => {\r\n     return (\r\n          <div className=\"container-title\">\r\n               <div className=\"block-1\">\r\n                    <span>G</span>\r\n                    <span>i</span>\r\n                    <span>f</span>\r\n               </div> \r\n               <div className=\"block-2\">\r\n                    <span>E</span>\r\n                    <span>x</span>\r\n                    <span>p</span>\r\n                    <span>e</span>\r\n                    <span>r</span>\r\n                    <span>t</span>\r\n               </div> \r\n               <div className=\"block-3\">\r\n                    <span>A</span>\r\n                    <span>p</span>\r\n                    <span>p</span>\r\n               </div> \r\n          </div>\r\n     )\r\n}","import React, { useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GridItems} from './components/GridItems'\r\nimport { CustomTitle } from './components/ui/CustomTitle'\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categorias, setCategorias] = useState(['One Punch'])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='header'>\r\n\t\t\t\t<CustomTitle />\r\n\t\t\t\t<AddCategory setCategorias= { setCategorias } />\r\n\t\t\t</div>\t\r\n\t\t\t<hr className='separator-line'/>\r\n\t\t\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategorias.map( category  => {\r\n\t\t\t\t\t\treturn <GridItems \r\n\t\t\t\t\t\t\tkey={ category }\r\n\t\t\t\t\t\t\tcategory={ category }\r\n\t\t\t\t\t\t/> \r\n\t\t\t\t\t})\t\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}